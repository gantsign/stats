{"version":3,"file":"static/js/207.19b97231.chunk.js","mappings":"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","sources":["stats/ui/SummaryTable.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  createMuiTheme,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Theme,\n  ThemeProvider,\n  Tooltip,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core';\nimport {SortDirection} from '@material-ui/core/TableCell';\nimport {SummaryRepository} from '../model/SummaryRepository';\nimport {\n  darkTheme,\n  parseIsoDateToMillis,\n  reformatIsoAsLocaleDate,\n  reformatIsoAsLocaleDatetime,\n  toLocaleString,\n} from './App';\nimport {StyleRules} from '@material-ui/core/styles';\nimport {Summary} from '../model/Summary';\nimport Semver from 'semver';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nclass Column {\n  constructor(\n    readonly id: string,\n    readonly name: string,\n    readonly numeric: boolean,\n    readonly accessor: (repo: SummaryRepository) => string,\n    readonly linkAccessor: (repo: SummaryRepository) => string | null,\n    readonly comparator: (repoA: SummaryRepository, repoB: SummaryRepository) => number,\n    readonly totalAccessor: (summary: Summary) => string,\n    readonly totalLinkAccessor: (summary: Summary) => string | null,\n    // eslint-disable-next-line no-undef\n    readonly iconAccessor: (repo: SummaryRepository, props: SummaryTableProps) => JSX.Element | null\n  ) {}\n}\n\nconst columns: Column[] = [\n  new Column(\n    'name',\n    'Name',\n    false,\n    repo => repo.name,\n    repo => repo.url,\n    (repoA, repoB) => {\n      const nameA = repoA.name.replace('_', '-');\n      const nameB = repoB.name.replace('_', '-');\n      return nameA.localeCompare(nameB);\n    },\n    () => '',\n    () => null,\n    () => null\n  ),\n  new Column(\n    'createdAt',\n    'Created',\n    false,\n    repo => reformatIsoAsLocaleDate(repo.created_at),\n    () => null,\n    (repoA, repoB) => {\n      const createdAtA = parseIsoDateToMillis(repoA.created_at) || 0;\n      const createdAtB = parseIsoDateToMillis(repoB.created_at) || 0;\n      return createdAtA - createdAtB;\n    },\n    summary => `${summary.repositories.length} projects`,\n    summary => summary.url,\n    () => null\n  ),\n  new Column(\n    'openIssuesCount',\n    'Open issues',\n    true,\n    repo => toLocaleString(repo.open_issues_count),\n    repo => repo.open_issues_url,\n    (repoA, repoB) => {\n      const openIssuesCountA = repoA.open_issues_count || 0;\n      const openIssuesCountB = repoB.open_issues_count || 0;\n      return openIssuesCountA - openIssuesCountB;\n    },\n    summary => toLocaleString(summary.total_open_issues_count),\n    summary => summary.total_open_issues_url,\n    () => null\n  ),\n  new Column(\n    'openPullRequestsCount',\n    'Open PRs',\n    true,\n    repo => toLocaleString(repo.open_pull_requests_count),\n    repo => repo.open_pull_requests_url,\n    (repoA, repoB) => {\n      const openPullRequestsCountA = repoA.open_pull_requests_count || 0;\n      const openPullRequestsCountB = repoB.open_pull_requests_count || 0;\n      return openPullRequestsCountA - openPullRequestsCountB;\n    },\n    summary => toLocaleString(summary.total_open_pull_requests_count),\n    summary => summary.total_open_pull_requests_url,\n    () => null\n  ),\n  new Column(\n    'latestReleaseVersion',\n    'Release',\n    false,\n    repo => repo.latest_release_version || '',\n    repo => repo.latest_release_url || null,\n    (repoA, repoB) => {\n      let latestReleaseVersionA: string | undefined | null = repoA.latest_release_version;\n      if (!latestReleaseVersionA) {\n        latestReleaseVersionA = null;\n      }\n      let latestReleaseVersionB: string | undefined | null = repoB.latest_release_version;\n      if (!latestReleaseVersionB) {\n        latestReleaseVersionB = null;\n      }\n      if (latestReleaseVersionA === null && latestReleaseVersionB === null) {\n        return 0;\n      }\n      if (latestReleaseVersionA === null || latestReleaseVersionB === null) {\n        return latestReleaseVersionA === null ? -1 : 1;\n      }\n      try {\n        return Semver.compare(latestReleaseVersionA, latestReleaseVersionB);\n      } catch (e) {\n        return latestReleaseVersionA.localeCompare(latestReleaseVersionB);\n      }\n    },\n    () => '',\n    () => null,\n    () => null\n  ),\n  new Column(\n    'latestReleaseAt',\n    'Release date',\n    false,\n    repo => reformatIsoAsLocaleDate(repo.latest_release_at),\n    () => null,\n    (repoA, repoB) => {\n      const latestReleaseAtA = parseIsoDateToMillis(repoA.latest_release_at) || 0;\n      const latestReleaseAtB = parseIsoDateToMillis(repoB.latest_release_at) || 0;\n      return latestReleaseAtA - latestReleaseAtB;\n    },\n    () => '',\n    () => null,\n    () => null\n  ),\n  new Column(\n    'commitsSinceRelease',\n    'Commits since release',\n    true,\n    repo => toLocaleString(repo.commits_since_release),\n    repo => repo.commits_since_release_url || null,\n    (repoA, repoB) => {\n      const commitsSinceReleaseA = repoA.commits_since_release || 0;\n      const commitsSinceReleaseB = repoB.commits_since_release || 0;\n      return commitsSinceReleaseA - commitsSinceReleaseB;\n    },\n    summary => toLocaleString(summary.total_commits_since_release),\n    () => null,\n    () => null\n  ),\n  new Column(\n    'stargazersCount',\n    'Stars',\n    true,\n    repo => toLocaleString(repo.stargazers_count),\n    repo => repo.stargazers_url || null,\n    (repoA, repoB) => {\n      const stargazersCountA = repoA.stargazers_count || 0;\n      const stargazersCountB = repoB.stargazers_count || 0;\n      return stargazersCountA - stargazersCountB;\n    },\n    summary => toLocaleString(summary.total_stargazers_count),\n    () => null,\n    () => null\n  ),\n  new Column(\n    'downloadsCount',\n    'Downloads',\n    true,\n    repo => toLocaleString(repo.downloads_count),\n    repo => repo.downloads_url || null,\n    (repoA, repoB) => {\n      const downloadsCountA = repoA.downloads_count || 0;\n      const downloadsCountB = repoB.downloads_count || 0;\n      return downloadsCountA - downloadsCountB;\n    },\n    summary => toLocaleString(summary.total_downloads_count),\n    () => null,\n    (repo, props) =>\n      repo.downloads_count ? (\n        <IconButton\n          onClick={() => props.onShowDownloadsChart(repo.name)}\n          className={props.classes.chartIcon}\n          disableRipple={true}\n        >\n          <FontAwesomeIcon icon=\"chart-line\" />\n        </IconButton>\n      ) : null\n  ),\n];\n\ninterface ColumnMap {\n  [key: string]: Column;\n}\n\nconst columnMapping: ColumnMap = columns.reduce((map: ColumnMap, column: Column): ColumnMap => {\n  map[column.id] = column;\n  return map;\n}, {});\n\ninterface TotalRowProps extends WithStyles {\n  summary?: Summary;\n}\n\nclass TotalRowBase extends React.Component<TotalRowProps, {}> {\n  render() {\n    const summary = this.props.summary;\n    if (!summary) {\n      return;\n    }\n    const classes = this.props.classes;\n\n    return (\n      <TableRow>\n        <TableCell key=\"totals\" className={classes.totalCell}>\n          Totals\n        </TableCell>\n        {columns\n          .filter((column: Column) => column.id !== 'name')\n          .map((column: Column) => {\n            const url = column.totalLinkAccessor(summary);\n            const contents = url ? (\n              <a className={classes.totalLink} href={url}>\n                {column.totalAccessor(summary)}\n              </a>\n            ) : (\n              column.totalAccessor(summary)\n            );\n            return (\n              <TableCell key={column.id} align={column.numeric ? 'right' : 'left'} className={classes.totalCell}>\n                {contents}\n              </TableCell>\n            );\n          })}\n      </TableRow>\n    );\n  }\n}\n\nconst lightTheme = createMuiTheme({});\n\nconst totalRowStyles = (theme: Theme): StyleRules => ({\n  totalCell: {\n    fontWeight: lightTheme.typography.caption.fontWeight,\n    color: lightTheme.palette.text.secondary,\n    backgroundColor: theme.palette.grey['300'],\n  },\n  totalLink: {\n    fontWeight: lightTheme.typography.caption.fontWeight,\n    color: lightTheme.palette.text.secondary,\n    textDecoration: 'none',\n    '&:focus, &:visited, &:link, &:active': {\n      color: lightTheme.palette.text.secondary,\n      textDecoration: 'none',\n    },\n    '&:hover': {\n      color: lightTheme.palette.text.secondary,\n      textDecoration: 'underline',\n    },\n  },\n});\n\nconst TotalRow = withStyles(totalRowStyles)(TotalRowBase);\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n  overrides: {\n    MuiTableRow: {\n      root: {\n        '&:nth-of-type(odd)': {\n          backgroundColor: lightTheme.palette.background.default,\n        },\n      },\n    },\n    MuiTableCell: {\n      head: {\n        backgroundColor: lightTheme.palette.primary.dark,\n        color: darkTheme.palette.text.primary,\n      },\n      body: {\n        color: lightTheme.palette.text.primary,\n      },\n    },\n    MuiTableSortLabel: {\n      root: {\n        color: darkTheme.palette.text.secondary,\n        '&:hover': {\n          color: darkTheme.palette.text.primary,\n        },\n      },\n    },\n  },\n});\n\ninterface SummaryTableProps extends WithStyles {\n  summary: Summary;\n\n  onShowDownloadsChart: (repositoryName: string) => void;\n}\n\ninterface SummaryTableState {\n  orderBy?: string;\n\n  order?: SortDirection;\n}\n\nclass SummaryTableBase extends React.Component<SummaryTableProps, SummaryTableState> {\n  componentDidMount(): void {\n    this.setState({\n      orderBy: 'name',\n      order: 'asc',\n    });\n  }\n\n  sortBy = (columnId: string) => {\n    const currentOrderBy: string = this.state.orderBy || 'name';\n    const currentOrder: SortDirection = this.state.order || 'asc';\n\n    const order: SortDirection =\n      currentOrderBy === columnId ? (currentOrder === 'desc' ? 'asc' : 'desc') : columnId === 'name' ? 'asc' : 'desc';\n\n    this.setState({\n      orderBy: columnId,\n      order,\n    });\n  };\n\n  render() {\n    const state = this.state;\n    if (!state) {\n      return <div>Loading...</div>;\n    }\n    const summary = this.props.summary;\n    const classes = this.props.classes;\n    const orderBy: string = state.orderBy || 'name';\n    const order: SortDirection = state.order || 'asc';\n    const repositories: SummaryRepository[] = summary.repositories;\n    const comparator = (columnMapping[orderBy] || columns[0]).comparator;\n\n    const sortedRepositories = [...repositories];\n    sortedRepositories.sort(comparator);\n    if (order === 'desc') {\n      sortedRepositories.reverse();\n    }\n\n    return (\n      <Paper className={classes.root}>\n        <ThemeProvider theme={theme}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell colSpan={columns.length}>\n                  <h2 className={classes.title}>GantSign open-source project statistics</h2>\n                  <div className={classes.subtitle}>Last updated: {reformatIsoAsLocaleDatetime(summary.data_at)}</div>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                {columns.map((column: Column) => {\n                  const sortDirection: SortDirection = orderBy === column.id ? order : false;\n                  const tooltipPlacement = column.numeric ? 'bottom-end' : 'bottom-start';\n                  const sortActive = orderBy === column.id;\n\n                  return (\n                    <TableCell key={column.id} align={column.numeric ? 'right' : 'left'} sortDirection={sortDirection}>\n                      <Tooltip title=\"Sort\" placement={tooltipPlacement} enterDelay={300}>\n                        <TableSortLabel active={sortActive} direction={order} onClick={() => this.sortBy(column.id)}>\n                          {column.name}\n                        </TableSortLabel>\n                      </Tooltip>\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n              <TotalRow summary={summary} />\n            </TableHead>\n            <TableFooter>\n              <TotalRow summary={summary} />\n            </TableFooter>\n            <TableBody>\n              {sortedRepositories.map((repository: SummaryRepository) => (\n                <TableRow key={repository.name}>\n                  {columns.map((column: Column) => {\n                    const link = column.linkAccessor(repository);\n                    const contents = link ? (\n                      <a className={classes.bodyLink} href={link}>\n                        {column.accessor(repository)}\n                      </a>\n                    ) : (\n                      column.accessor(repository)\n                    );\n                    return (\n                      <TableCell key={column.id} align={column.numeric ? 'right' : 'left'}>\n                        {contents}\n                        {column.iconAccessor(repository, this.props) || ''}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </ThemeProvider>\n      </Paper>\n    );\n  }\n}\n\nconst styles = (theme: Theme): StyleRules => ({\n  root: {\n    overflow: 'hidden',\n  },\n  title: {\n    fontSize: theme.typography.h6.fontSize,\n    fontWeight: theme.typography.h6.fontWeight,\n    fontFamily: theme.typography.h6.fontFamily,\n    lineHeight: theme.typography.h6.lineHeight,\n  },\n  subtitle: {\n    fontSize: theme.typography.caption.fontSize,\n    fontWeight: theme.typography.caption.fontWeight,\n    fontFamily: theme.typography.caption.fontFamily,\n    lineHeight: theme.typography.caption.lineHeight,\n  },\n  bodyLink: {\n    fontWeight: theme.typography.body2.fontWeight,\n    color: theme.palette.text.primary,\n    textDecoration: 'none',\n    '&:focus, &:visited, &:link, &:active': {\n      color: theme.palette.text.primary,\n      textDecoration: 'none',\n    },\n    '&:hover': {\n      color: theme.palette.text.primary,\n      textDecoration: 'underline',\n    },\n  },\n  chartIcon: {\n    padding: 0,\n    paddingLeft: '0.25em',\n    borderRadius: 0,\n    color: theme.palette.text.secondary,\n  },\n});\nconst SummaryTable = withStyles(styles)(SummaryTableBase);\n\nexport default SummaryTable;\n"],"names":["Column","constructor","id","name","numeric","accessor","linkAccessor","comparator","totalAccessor","totalLinkAccessor","iconAccessor","columns","repo","url","repoA","repoB","nameA","replace","nameB","localeCompare","reformatIsoAsLocaleDate","created_at","parseIsoDateToMillis","summary","repositories","length","toLocaleString","open_issues_count","open_issues_url","total_open_issues_count","total_open_issues_url","open_pull_requests_count","open_pull_requests_url","total_open_pull_requests_count","total_open_pull_requests_url","latest_release_version","latest_release_url","latestReleaseVersionA","latestReleaseVersionB","Semver","e","latest_release_at","commits_since_release","commits_since_release_url","total_commits_since_release","stargazers_count","stargazers_url","total_stargazers_count","downloads_count","downloads_url","total_downloads_count","props","_jsx","IconButton","onClick","onShowDownloadsChart","className","classes","chartIcon","disableRipple","children","FontAwesomeIcon","icon","columnMapping","reduce","map","column","TotalRowBase","React","render","this","_jsxs","TableRow","TableCell","totalCell","filter","contents","totalLink","href","align","lightTheme","createMuiTheme","TotalRow","withStyles","theme","fontWeight","typography","caption","color","palette","text","secondary","backgroundColor","grey","textDecoration","type","overrides","MuiTableRow","root","background","default","MuiTableCell","head","primary","dark","darkTheme","body","MuiTableSortLabel","SummaryTableBase","arguments","sortBy","columnId","currentOrderBy","state","orderBy","currentOrder","order","setState","componentDidMount","sortedRepositories","sort","reverse","Paper","ThemeProvider","Table","TableHead","colSpan","title","subtitle","reformatIsoAsLocaleDatetime","data_at","sortDirection","tooltipPlacement","sortActive","Tooltip","placement","enterDelay","TableSortLabel","active","direction","TableFooter","TableBody","repository","link","bodyLink","SummaryTable","overflow","fontSize","h6","fontFamily","lineHeight","body2","padding","paddingLeft","borderRadius"],"sourceRoot":""}