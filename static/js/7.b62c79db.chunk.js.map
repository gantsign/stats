{"version":3,"sources":["stats/ui/summarytable/SummaryTable.tsx"],"names":["Column","id","name","numeric","accessor","linkAccessor","comparator","totalAccessor","totalLinkAccessor","iconAccessor","Object","_home_travis_build_gantsign_stats_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","this","columns","repo","url","a","b","nameA","replace","nameB","localeCompare","reformatIsoAsLocaleDate","created_at","parseIsoDateToMillis","summary","concat","repositories","length","toLocaleString","open_issues_count","open_issues_url","total_open_issues_count","total_open_issues_url","open_pull_requests_count","open_pull_requests_url","total_open_pull_requests_count","total_open_pull_requests_url","latest_release_version","latest_release_url","latestReleaseVersionA","latestReleaseVersionB","Semver","compare","latest_release_at","commits_since_release","commits_since_release_url","total_commits_since_release","stargazers_count","stargazers_url","total_stargazers_count","downloads_count","downloads_url","total_downloads_count","props","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","onClick","onShowDownloadsChart","className","classes","chartIcon","disableRipple","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_11__","icon","columnMapping","reduce","map","column","TotalRowBase","totals","key","filter","contents","totalLink","href","align","React","Component","TotalRow","withStyles","theme","backgroundColor","palette","grey","fontWeight","typography","caption","color","textDecoration","&:focus, &:visited, &:link, &:active","&:hover","SummaryTableBase","sortBy","columnId","currentOrderBy","_this","state","orderBy","currentOrder","order","setState","_this2","sortedRepositories","_home_travis_build_gantsign_stats_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","sort","reverse","root","padding","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","darkTheme","header","colSpan","title","subtitle","reformatIsoAsLocaleDatetime","data_at","sortDirection","tooltipPlacement","sortActive","placement","enterDelay","active","direction","repository","row","link","bodyLink","SummaryTable","overflowX","&:nth-of-type(odd)","background","default","primary","dark","fontSize","fontFamily","lineHeight","common","white","body1","paddingLeft","borderRadius"],"mappings":"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","file":"static/js/7.b62c79db.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    IconButton,\n    MuiThemeProvider,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableFooter,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Theme,\n    Tooltip,\n    withStyles\n} from \"@material-ui/core\";\nimport {SummaryTableProps} from \"./SummaryTableProps\";\nimport {SummaryTableState} from \"./SummaryTableState\";\nimport {SortDirection} from \"@material-ui/core/TableCell\";\nimport {SummaryRepository} from \"../../model/SummaryRepository\";\nimport {\n    darkTheme,\n    parseIsoDateToMillis,\n    reformatIsoAsLocaleDate,\n    reformatIsoAsLocaleDatetime,\n    toLocaleString\n} from \"../App\";\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport {Summary} from \"../../model/Summary\";\nimport Semver from \"semver\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nclass Column {\n    constructor(\n            readonly id: string,\n            readonly name: string,\n            readonly numeric: boolean,\n            readonly accessor: (repo: SummaryRepository) => string,\n            readonly linkAccessor: (repo: SummaryRepository) => string | null,\n            readonly comparator: (a: SummaryRepository, b: SummaryRepository) => number,\n            readonly totalAccessor: (summary: Summary) => string,\n            readonly totalLinkAccessor: (summary: Summary) => string | null,\n            readonly iconAccessor: (repo: SummaryRepository, props: SummaryTableProps) => JSX.Element | null\n    ) {\n    }\n}\n\nconst columns: Column[] = [\n    new Column(\n            \"name\",\n            \"Name\",\n            false,\n            (repo: SummaryRepository): string => {\n                return repo.name;\n            },\n            (repo: SummaryRepository): string | null => {\n                return repo.url;\n            },\n            (a: SummaryRepository, b: SummaryRepository): number => {\n                const nameA = a.name.replace('_', '-');\n                const nameB = b.name.replace('_', '-');\n                return nameA.localeCompare(nameB);\n            },\n            (): string => {\n                return \"\";\n            },\n            (): string | null => {\n                return null;\n            },\n            () => {\n                return null;\n            }\n    ),\n    new Column(\n            \"createdAt\",\n            \"Created\",\n            false,\n            (repo: SummaryRepository): string => {\n                return reformatIsoAsLocaleDate(repo.created_at);\n            },\n            (): string | null => {\n                return null;\n            },\n            (a: SummaryRepository, b: SummaryRepository): number => {\n                const createdAtA = parseIsoDateToMillis(a.created_at) || 0;\n                const createdAtB = parseIsoDateToMillis(b.created_at) || 0;\n                return createdAtA - createdAtB;\n            },\n            (summary: Summary): string => {\n                return `${summary.repositories.length} projects`;\n            },\n            (summary: Summary): string | null => {\n                return summary.url;\n            },\n            () => {\n                return null;\n            }\n    ),\n    new Column(\n            \"openIssuesCount\",\n            \"Open issues\",\n            true,\n            (repo: SummaryRepository): string => {\n                return toLocaleString(repo.open_issues_count);\n            },\n            (repo: SummaryRepository): string | null => {\n                return repo.open_issues_url;\n            },\n            (a: SummaryRepository, b: SummaryRepository): number => {\n                const openIssuesCountA = a.open_issues_count || 0;\n                const openIssuesCountB = b.open_issues_count || 0;\n                return openIssuesCountA - openIssuesCountB;\n            },\n            (summary: Summary): string => {\n                return toLocaleString(summary.total_open_issues_count);\n            },\n            (summary: Summary): string | null => {\n                return summary.total_open_issues_url;\n            },\n            () => {\n                return null;\n            }\n    ),\n    new Column(\n            \"openPullRequestsCount\",\n            \"Open PRs\",\n            true,\n            (repo: SummaryRepository): string => {\n                return toLocaleString(repo.open_pull_requests_count);\n            },\n            (repo: SummaryRepository): string | null => {\n                return repo.open_pull_requests_url;\n            },\n            (a: SummaryRepository, b: SummaryRepository): number => {\n                const openPullRequestsCountA = a.open_pull_requests_count || 0;\n                const openPullRequestsCountB = b.open_pull_requests_count || 0;\n                return openPullRequestsCountA - openPullRequestsCountB;\n            },\n            (summary: Summary): string => {\n                return toLocaleString(summary.total_open_pull_requests_count);\n            },\n            (summary: Summary): string | null => {\n                return summary.total_open_pull_requests_url;\n            },\n            () => {\n                return null;\n            }\n    ),\n    new Column(\n            \"latestReleaseVersion\",\n            \"Release\",\n            false,\n            (repo: SummaryRepository): string => {\n                return repo.latest_release_version || \"\";\n            },\n            (repo: SummaryRepository): string | null => {\n                return repo.latest_release_url || null;\n            },\n            (a: SummaryRepository, b: SummaryRepository): number => {\n                let latestReleaseVersionA: string | undefined | null = a.latest_release_version;\n                if (!latestReleaseVersionA) {\n                    latestReleaseVersionA = null;\n                }\n                let latestReleaseVersionB: string | undefined | null = b.latest_release_version;\n                if (!latestReleaseVersionB) {\n                    latestReleaseVersionB = null;\n                }\n                if (latestReleaseVersionA == null && latestReleaseVersionB == null) {\n                    return 0;\n                }\n                if (latestReleaseVersionA == null || latestReleaseVersionB == null) {\n                    return latestReleaseVersionA == null ? -1 : 1;\n                }\n                return Semver.compare(latestReleaseVersionA, latestReleaseVersionB);\n            },\n            (): string => {\n                return \"\";\n            },\n            (): string | null => {\n                return null;\n            },\n            () => {\n                return null;\n            }\n    ),\n    new Column(\n            \"latestReleaseAt\",\n            \"Release date\",\n            false,\n            (repo: SummaryRepository): string => {\n                return reformatIsoAsLocaleDate(repo.latest_release_at);\n            },\n            (): string | null => {\n                return null;\n            },\n            (a: SummaryRepository, b: SummaryRepository): number => {\n                const latestReleaseAtA = parseIsoDateToMillis(a.latest_release_at) || 0;\n                const latestReleaseAtB = parseIsoDateToMillis(b.latest_release_at) || 0;\n                return latestReleaseAtA - latestReleaseAtB;\n            },\n            (): string => {\n                return \"\";\n            },\n            (): string | null => {\n                return null;\n            },\n            () => {\n                return null;\n            }\n    ),\n    new Column(\n            \"commitsSinceRelease\",\n            \"Commits since release\",\n            true,\n            (repo: SummaryRepository): string => {\n                return toLocaleString(repo.commits_since_release);\n            },\n            (repo: SummaryRepository): string | null => {\n                return repo.commits_since_release_url || null;\n            },\n            (a: SummaryRepository, b: SummaryRepository): number => {\n                const commitsSinceReleaseA = a.commits_since_release || 0;\n                const commitsSinceReleaseB = b.commits_since_release || 0;\n                return commitsSinceReleaseA - commitsSinceReleaseB;\n            },\n            (summary: Summary): string => {\n                return toLocaleString(summary.total_commits_since_release);\n            },\n            (): string | null => {\n                return null;\n            },\n            () => {\n                return null;\n            }\n    ),\n    new Column(\n            \"stargazersCount\",\n            \"Stars\",\n            true,\n            (repo: SummaryRepository): string => {\n                return toLocaleString(repo.stargazers_count);\n            },\n            (repo: SummaryRepository): string | null => {\n                return repo.stargazers_url || null;\n            },\n            (a: SummaryRepository, b: SummaryRepository): number => {\n                const stargazersCountA = a.stargazers_count || 0;\n                const stargazersCountB = b.stargazers_count || 0;\n                return stargazersCountA - stargazersCountB;\n            },\n            (summary: Summary): string => {\n                return toLocaleString(summary.total_stargazers_count);\n            },\n            (): string | null => {\n                return null;\n            },\n            () => {\n                return null;\n            }\n    ),\n    new Column(\n            \"downloadsCount\",\n            \"Downloads\",\n            true,\n            (repo: SummaryRepository): string => {\n                return toLocaleString(repo.downloads_count);\n            },\n            (repo: SummaryRepository): string | null => {\n                return repo.downloads_url || null;\n            },\n            (a: SummaryRepository, b: SummaryRepository): number => {\n                const downloadsCountA = a.downloads_count || 0;\n                const downloadsCountB = b.downloads_count || 0;\n                return downloadsCountA - downloadsCountB;\n            },\n            (summary: Summary): string => {\n                return toLocaleString(summary.total_downloads_count);\n            },\n            (): string | null => {\n                return null;\n            },\n            (repo: SummaryRepository, props: SummaryTableProps) => {\n                return repo.downloads_count ? (\n                        <IconButton\n                                onClick={() => props.onShowDownloadsChart(repo.name)}\n                                className={props.classes.chartIcon}\n                                disableRipple={true}>\n                            <FontAwesomeIcon icon=\"chart-line\"/>\n                        </IconButton>\n                ) : null;\n            }\n    ),\n];\n\ninterface ColumnMap {\n    [key: string]: Column;\n}\n\nconst columnMapping: ColumnMap = columns.reduce((map: ColumnMap, column: Column): ColumnMap => {\n    map[column.id] = column;\n    return map;\n}, {});\n\n\ninterface TotalRowProps {\n    classes: any;\n    summary?: Summary;\n}\n\nclass TotalRowBase extends React.Component<TotalRowProps, {}> {\n    render() {\n        const summary = this.props.summary;\n        if (!summary) {\n            return;\n        }\n        const classes = this.props.classes;\n\n        return (\n                <TableRow className={classes.totals}>\n                    <TableCell key=\"totals\">Totals</TableCell>\n                    {columns\n                    .filter((column: Column) => {\n                        return column.id !== \"name\";\n                    })\n                    .map((column: Column) => {\n                        const url = column.totalLinkAccessor(summary);\n                        const contents = url\n                                ? (<a className={classes.totalLink}\n                                      href={url}>{column.totalAccessor(summary)}</a>)\n                                : column.totalAccessor(summary);\n                        return (\n                                <TableCell key={column.id}\n                                           align={column.numeric ? \"right\" : \"left\"}>\n                                    {contents}\n                                </TableCell>\n                        );\n                    })}\n                </TableRow>\n        );\n    }\n}\n\nconst totalRowStyles = (theme: Theme): StyleRules => {\n    return {\n        totals: {\n            backgroundColor: theme.palette.grey[\"300\"]\n        },\n        totalLink: {\n            fontWeight: theme.typography.caption.fontWeight,\n            color: theme.typography.caption.color,\n            textDecoration: \"none\",\n            \"&:focus, &:visited, &:link, &:active\": {\n                color: theme.typography.caption.color,\n                textDecoration: \"none\"\n            },\n            \"&:hover\": {\n                color: theme.typography.caption.color,\n                textDecoration: \"underline\"\n            }\n        }\n    };\n};\n\nconst TotalRow = withStyles(totalRowStyles)(TotalRowBase);\n\nclass SummaryTableBase extends React.Component<SummaryTableProps, SummaryTableState> {\n\n    componentDidMount(): void {\n        this.setState({\n            orderBy: \"name\",\n            order: \"asc\"\n        });\n    }\n\n    sortBy = (columnId: string) => {\n        const currentOrderBy: string = this.state.orderBy || \"name\";\n        const currentOrder: SortDirection = this.state.order || \"asc\";\n\n        const order: SortDirection = currentOrderBy === columnId ?\n                (currentOrder === \"desc\" ? \"asc\" : \"desc\")\n                : (columnId === \"name\" ? \"asc\" : \"desc\");\n\n        this.setState({\n            orderBy: columnId,\n            order\n        });\n    };\n\n    render() {\n        const state = this.state;\n        if (!state) {\n            return (<div>Loading...</div>);\n        }\n        const summary = this.props.summary;\n        const classes: any = this.props.classes;\n        const orderBy: string = state.orderBy || \"name\";\n        const order: SortDirection = state.order || \"asc\";\n        const repositories: SummaryRepository[] = summary.repositories;\n        const comparator = (columnMapping[orderBy] || columns[0]).comparator;\n\n        const sortedRepositories = [...repositories];\n        sortedRepositories.sort(comparator);\n        if (order === \"desc\") {\n            sortedRepositories.reverse();\n        }\n\n        return (\n                <Paper className={classes.root}>\n                    <Table padding=\"dense\">\n                        <TableHead>\n                            <MuiThemeProvider theme={darkTheme}>\n                                <TableRow className={classes.header}>\n                                    <TableCell colSpan={columns.length}>\n                                        <h2 className={classes.title}>\n                                            GantSign open-source project statistics\n                                        </h2>\n                                        <div className={classes.subtitle}>\n                                            Last\n                                            updated: {reformatIsoAsLocaleDatetime(summary.data_at)}\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow className={classes.header}>\n                                    {columns.map((column: Column) => {\n                                        const sortDirection: SortDirection = orderBy === column.id ? order : false;\n                                        const tooltipPlacement = column.numeric ? \"bottom-end\" : \"bottom-start\";\n                                        const sortActive = orderBy === column.id;\n\n                                        return (\n                                                <TableCell key={column.id}\n                                                           align={column.numeric ? \"right\" : \"left\"}\n                                                           sortDirection={sortDirection}>\n                                                    <Tooltip title=\"Sort\"\n                                                             placement={tooltipPlacement}\n                                                             enterDelay={300}>\n                                                        <TableSortLabel active={sortActive}\n                                                                        direction={order}\n                                                                        onClick={() => this.sortBy(column.id)}>\n                                                            {column.name}\n                                                        </TableSortLabel>\n                                                    </Tooltip>\n                                                </TableCell>\n                                        );\n                                    })}\n                                </TableRow>\n                            </MuiThemeProvider>\n                            <TotalRow summary={summary}/>\n                        </TableHead>\n                        <TableFooter>\n                            <TotalRow summary={summary}/>\n                        </TableFooter>\n                        <TableBody>\n                            {sortedRepositories.map((repository: SummaryRepository) => {\n                                return (\n                                        <TableRow key={repository.name} className={classes.row}>\n                                            {columns.map((column: Column) => {\n                                                const link = column.linkAccessor(repository);\n                                                const contents = link ?\n                                                        (<a className={classes.bodyLink}\n                                                            href={link}>{column.accessor(repository)}</a>)\n                                                        : column.accessor(repository);\n                                                return (\n                                                        <TableCell key={column.id}\n                                                                   align={column.numeric ? \"right\" : \"left\"}>\n                                                            {contents}\n                                                            {column.iconAccessor(repository, this.props) || \"\"}\n                                                        </TableCell>\n                                                );\n                                            })}\n                                        </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </Paper>\n        );\n    }\n}\n\nconst styles = (theme: Theme): StyleRules => {\n    return {\n        root: {\n            overflowX: \"auto\"\n        },\n        row: {\n            \"&:nth-of-type(odd)\": {\n                backgroundColor: theme.palette.background.default\n            }\n        },\n        header: {\n            backgroundColor: theme.palette.primary.dark\n        },\n        title: {\n            fontSize: theme.typography.title.fontSize,\n            fontWeight: theme.typography.title.fontWeight,\n            fontFamily: theme.typography.title.fontFamily,\n            lineHeight: theme.typography.title.lineHeight,\n            color: theme.palette.common.white\n        },\n        subtitle: {\n            fontSize: theme.typography.caption.fontSize,\n            fontWeight: theme.typography.caption.fontWeight,\n            fontFamily: theme.typography.caption.fontFamily,\n            lineHeight: theme.typography.caption.lineHeight,\n            color: theme.palette.common.white\n        },\n        bodyLink: {\n            fontWeight: theme.typography.body1.fontWeight,\n            color: theme.typography.body1.color,\n            textDecoration: \"none\",\n            \"&:focus, &:visited, &:link, &:active\": {\n                color: theme.typography.body1.color,\n                textDecoration: \"none\"\n            },\n            \"&:hover\": {\n                color: theme.typography.body1.color,\n                textDecoration: \"underline\"\n            }\n        },\n        chartIcon: {\n            padding: 0,\n            paddingLeft: \"0.25em\",\n            borderRadius: 0\n        }\n    };\n};\nconst SummaryTable = withStyles(styles)(SummaryTableBase);\n\nexport default SummaryTable;\n"],"sourceRoot":""}