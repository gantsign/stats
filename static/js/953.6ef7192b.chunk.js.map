{"version":3,"file":"static/js/953.6ef7192b.chunk.js","mappings":"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","sources":["stats/ui/SummaryTable.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  createMuiTheme,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Theme,\n  ThemeProvider,\n  Tooltip,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core';\nimport {SortDirection} from '@material-ui/core/TableCell';\nimport {SummaryRepository} from '../model/SummaryRepository';\nimport {\n  darkTheme,\n  parseIsoDateToMillis,\n  reformatIsoAsLocaleDate,\n  reformatIsoAsLocaleDatetime,\n  toLocaleString,\n} from './App';\nimport {StyleRules} from '@material-ui/core/styles';\nimport {Summary} from '../model/Summary';\nimport Semver from 'semver';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nclass Column {\n  constructor(\n    readonly id: string,\n    readonly name: string,\n    readonly numeric: boolean,\n    readonly accessor: (repo: SummaryRepository) => string,\n    readonly linkAccessor: (repo: SummaryRepository) => string | null,\n    readonly comparator: (repoA: SummaryRepository, repoB: SummaryRepository) => number,\n    readonly totalAccessor: (summary: Summary) => string,\n    readonly totalLinkAccessor: (summary: Summary) => string | null,\n    // eslint-disable-next-line no-undef\n    readonly iconAccessor: (repo: SummaryRepository, props: SummaryTableProps) => JSX.Element | null\n  ) {}\n}\n\nconst columns: Column[] = [\n  new Column(\n    'name',\n    'Name',\n    false,\n    repo => repo.name,\n    repo => repo.url,\n    (repoA, repoB) => {\n      const nameA = repoA.name.replace('_', '-');\n      const nameB = repoB.name.replace('_', '-');\n      return nameA.localeCompare(nameB);\n    },\n    () => '',\n    () => null,\n    () => null\n  ),\n  new Column(\n    'createdAt',\n    'Created',\n    false,\n    repo => reformatIsoAsLocaleDate(repo.created_at),\n    () => null,\n    (repoA, repoB) => {\n      const createdAtA = parseIsoDateToMillis(repoA.created_at) || 0;\n      const createdAtB = parseIsoDateToMillis(repoB.created_at) || 0;\n      return createdAtA - createdAtB;\n    },\n    summary => `${summary.repositories.length} projects`,\n    summary => summary.url,\n    () => null\n  ),\n  new Column(\n    'openIssuesCount',\n    'Open issues',\n    true,\n    repo => toLocaleString(repo.open_issues_count),\n    repo => repo.open_issues_url,\n    (repoA, repoB) => {\n      const openIssuesCountA = repoA.open_issues_count || 0;\n      const openIssuesCountB = repoB.open_issues_count || 0;\n      return openIssuesCountA - openIssuesCountB;\n    },\n    summary => toLocaleString(summary.total_open_issues_count),\n    summary => summary.total_open_issues_url,\n    () => null\n  ),\n  new Column(\n    'openPullRequestsCount',\n    'Open PRs',\n    true,\n    repo => toLocaleString(repo.open_pull_requests_count),\n    repo => repo.open_pull_requests_url,\n    (repoA, repoB) => {\n      const openPullRequestsCountA = repoA.open_pull_requests_count || 0;\n      const openPullRequestsCountB = repoB.open_pull_requests_count || 0;\n      return openPullRequestsCountA - openPullRequestsCountB;\n    },\n    summary => toLocaleString(summary.total_open_pull_requests_count),\n    summary => summary.total_open_pull_requests_url,\n    () => null\n  ),\n  new Column(\n    'latestReleaseVersion',\n    'Release',\n    false,\n    repo => repo.latest_release_version || '',\n    repo => repo.latest_release_url || null,\n    (repoA, repoB) => {\n      let latestReleaseVersionA: string | undefined | null = repoA.latest_release_version;\n      if (!latestReleaseVersionA) {\n        latestReleaseVersionA = null;\n      }\n      let latestReleaseVersionB: string | undefined | null = repoB.latest_release_version;\n      if (!latestReleaseVersionB) {\n        latestReleaseVersionB = null;\n      }\n      if (latestReleaseVersionA === null && latestReleaseVersionB === null) {\n        return 0;\n      }\n      if (latestReleaseVersionA === null || latestReleaseVersionB === null) {\n        return latestReleaseVersionA === null ? -1 : 1;\n      }\n      try {\n        return Semver.compare(latestReleaseVersionA, latestReleaseVersionB);\n      } catch (e) {\n        return latestReleaseVersionA.localeCompare(latestReleaseVersionB);\n      }\n    },\n    () => '',\n    () => null,\n    () => null\n  ),\n  new Column(\n    'latestReleaseAt',\n    'Release date',\n    false,\n    repo => reformatIsoAsLocaleDate(repo.latest_release_at),\n    () => null,\n    (repoA, repoB) => {\n      const latestReleaseAtA = parseIsoDateToMillis(repoA.latest_release_at) || 0;\n      const latestReleaseAtB = parseIsoDateToMillis(repoB.latest_release_at) || 0;\n      return latestReleaseAtA - latestReleaseAtB;\n    },\n    () => '',\n    () => null,\n    () => null\n  ),\n  new Column(\n    'commitsSinceRelease',\n    'Commits since release',\n    true,\n    repo => toLocaleString(repo.commits_since_release),\n    repo => repo.commits_since_release_url || null,\n    (repoA, repoB) => {\n      const commitsSinceReleaseA = repoA.commits_since_release || 0;\n      const commitsSinceReleaseB = repoB.commits_since_release || 0;\n      return commitsSinceReleaseA - commitsSinceReleaseB;\n    },\n    summary => toLocaleString(summary.total_commits_since_release),\n    () => null,\n    () => null\n  ),\n  new Column(\n    'stargazersCount',\n    'Stars',\n    true,\n    repo => toLocaleString(repo.stargazers_count),\n    repo => repo.stargazers_url || null,\n    (repoA, repoB) => {\n      const stargazersCountA = repoA.stargazers_count || 0;\n      const stargazersCountB = repoB.stargazers_count || 0;\n      return stargazersCountA - stargazersCountB;\n    },\n    summary => toLocaleString(summary.total_stargazers_count),\n    () => null,\n    () => null\n  ),\n  new Column(\n    'downloadsCount',\n    'Downloads',\n    true,\n    repo => toLocaleString(repo.downloads_count),\n    repo => repo.downloads_url || null,\n    (repoA, repoB) => {\n      const downloadsCountA = repoA.downloads_count || 0;\n      const downloadsCountB = repoB.downloads_count || 0;\n      return downloadsCountA - downloadsCountB;\n    },\n    summary => toLocaleString(summary.total_downloads_count),\n    () => null,\n    (repo, props) =>\n      repo.downloads_count ? (\n        <IconButton\n          onClick={() => props.onShowDownloadsChart(repo.name)}\n          className={props.classes.chartIcon}\n          disableRipple={true}\n        >\n          <FontAwesomeIcon icon=\"chart-line\" />\n        </IconButton>\n      ) : null\n  ),\n];\n\ninterface ColumnMap {\n  [key: string]: Column;\n}\n\nconst columnMapping: ColumnMap = columns.reduce((map: ColumnMap, column: Column): ColumnMap => {\n  map[column.id] = column;\n  return map;\n}, {});\n\ninterface TotalRowProps extends WithStyles {\n  summary?: Summary;\n}\n\nclass TotalRowBase extends React.Component<TotalRowProps, {}> {\n  render() {\n    const summary = this.props.summary;\n    if (!summary) {\n      return;\n    }\n    const classes = this.props.classes;\n\n    return (\n      <TableRow>\n        <TableCell key=\"totals\" className={classes.totalCell}>\n          Totals\n        </TableCell>\n        {columns\n          .filter((column: Column) => column.id !== 'name')\n          .map((column: Column) => {\n            const url = column.totalLinkAccessor(summary);\n            const contents = url ? (\n              <a className={classes.totalLink} href={url}>\n                {column.totalAccessor(summary)}\n              </a>\n            ) : (\n              column.totalAccessor(summary)\n            );\n            return (\n              <TableCell key={column.id} align={column.numeric ? 'right' : 'left'} className={classes.totalCell}>\n                {contents}\n              </TableCell>\n            );\n          })}\n      </TableRow>\n    );\n  }\n}\n\nconst lightTheme = createMuiTheme({});\n\nconst totalRowStyles = (theme: Theme): StyleRules => ({\n  totalCell: {\n    fontWeight: lightTheme.typography.caption.fontWeight,\n    color: lightTheme.palette.text.secondary,\n    backgroundColor: theme.palette.grey['300'],\n  },\n  totalLink: {\n    fontWeight: lightTheme.typography.caption.fontWeight,\n    color: lightTheme.palette.text.secondary,\n    textDecoration: 'none',\n    '&:focus, &:visited, &:link, &:active': {\n      color: lightTheme.palette.text.secondary,\n      textDecoration: 'none',\n    },\n    '&:hover': {\n      color: lightTheme.palette.text.secondary,\n      textDecoration: 'underline',\n    },\n  },\n});\n\nconst TotalRow = withStyles(totalRowStyles)(TotalRowBase);\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n  overrides: {\n    MuiTableRow: {\n      root: {\n        '&:nth-of-type(odd)': {\n          backgroundColor: lightTheme.palette.background.default,\n        },\n      },\n    },\n    MuiTableCell: {\n      head: {\n        backgroundColor: lightTheme.palette.primary.dark,\n        color: darkTheme.palette.text.primary,\n      },\n      body: {\n        color: lightTheme.palette.text.primary,\n      },\n    },\n    MuiTableSortLabel: {\n      root: {\n        color: darkTheme.palette.text.secondary,\n        '&:hover': {\n          color: darkTheme.palette.text.primary,\n        },\n      },\n    },\n  },\n});\n\ninterface SummaryTableProps extends WithStyles {\n  summary: Summary;\n\n  onShowDownloadsChart: (repositoryName: string) => void;\n}\n\ninterface SummaryTableState {\n  orderBy?: string;\n\n  order?: SortDirection;\n}\n\nclass SummaryTableBase extends React.Component<SummaryTableProps, SummaryTableState> {\n  componentDidMount(): void {\n    this.setState({\n      orderBy: 'name',\n      order: 'asc',\n    });\n  }\n\n  sortBy = (columnId: string) => {\n    const currentOrderBy: string = this.state.orderBy || 'name';\n    const currentOrder: SortDirection = this.state.order || 'asc';\n\n    const order: SortDirection =\n      currentOrderBy === columnId ? (currentOrder === 'desc' ? 'asc' : 'desc') : columnId === 'name' ? 'asc' : 'desc';\n\n    this.setState({\n      orderBy: columnId,\n      order,\n    });\n  };\n\n  render() {\n    const state = this.state;\n    if (!state) {\n      return <div>Loading...</div>;\n    }\n    const summary = this.props.summary;\n    const classes = this.props.classes;\n    const orderBy: string = state.orderBy || 'name';\n    const order: SortDirection = state.order || 'asc';\n    const repositories: SummaryRepository[] = summary.repositories;\n    const comparator = (columnMapping[orderBy] || columns[0]).comparator;\n\n    const sortedRepositories = [...repositories];\n    sortedRepositories.sort(comparator);\n    if (order === 'desc') {\n      sortedRepositories.reverse();\n    }\n\n    return (\n      <Paper className={classes.root}>\n        <ThemeProvider theme={theme}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell colSpan={columns.length}>\n                  <h2 className={classes.title}>GantSign open-source project statistics</h2>\n                  <div className={classes.subtitle}>Last updated: {reformatIsoAsLocaleDatetime(summary.data_at)}</div>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                {columns.map((column: Column) => {\n                  const sortDirection: SortDirection = orderBy === column.id ? order : false;\n                  const tooltipPlacement = column.numeric ? 'bottom-end' : 'bottom-start';\n                  const sortActive = orderBy === column.id;\n\n                  return (\n                    <TableCell key={column.id} align={column.numeric ? 'right' : 'left'} sortDirection={sortDirection}>\n                      <Tooltip title=\"Sort\" placement={tooltipPlacement} enterDelay={300}>\n                        <TableSortLabel active={sortActive} direction={order} onClick={() => this.sortBy(column.id)}>\n                          {column.name}\n                        </TableSortLabel>\n                      </Tooltip>\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n              <TotalRow summary={summary} />\n            </TableHead>\n            <TableFooter>\n              <TotalRow summary={summary} />\n            </TableFooter>\n            <TableBody>\n              {sortedRepositories.map((repository: SummaryRepository) => (\n                <TableRow key={repository.name}>\n                  {columns.map((column: Column) => {\n                    const link = column.linkAccessor(repository);\n                    const contents = link ? (\n                      <a className={classes.bodyLink} href={link}>\n                        {column.accessor(repository)}\n                      </a>\n                    ) : (\n                      column.accessor(repository)\n                    );\n                    return (\n                      <TableCell key={column.id} align={column.numeric ? 'right' : 'left'}>\n                        {contents}\n                        {column.iconAccessor(repository, this.props) || ''}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </ThemeProvider>\n      </Paper>\n    );\n  }\n}\n\nconst styles = (theme: Theme): StyleRules => ({\n  root: {\n    overflow: 'hidden',\n  },\n  title: {\n    fontSize: theme.typography.h6.fontSize,\n    fontWeight: theme.typography.h6.fontWeight,\n    fontFamily: theme.typography.h6.fontFamily,\n    lineHeight: theme.typography.h6.lineHeight,\n  },\n  subtitle: {\n    fontSize: theme.typography.caption.fontSize,\n    fontWeight: theme.typography.caption.fontWeight,\n    fontFamily: theme.typography.caption.fontFamily,\n    lineHeight: theme.typography.caption.lineHeight,\n  },\n  bodyLink: {\n    fontWeight: theme.typography.body2.fontWeight,\n    color: theme.palette.text.primary,\n    textDecoration: 'none',\n    '&:focus, &:visited, &:link, &:active': {\n      color: theme.palette.text.primary,\n      textDecoration: 'none',\n    },\n    '&:hover': {\n      color: theme.palette.text.primary,\n      textDecoration: 'underline',\n    },\n  },\n  chartIcon: {\n    padding: 0,\n    paddingLeft: '0.25em',\n    borderRadius: 0,\n    color: theme.palette.text.secondary,\n  },\n});\nconst SummaryTable = withStyles(styles)(SummaryTableBase);\n\nexport default SummaryTable;\n"],"names":["Column","_createClass","id","name","numeric","accessor","linkAccessor","comparator","totalAccessor","totalLinkAccessor","iconAccessor","_classCallCheck","columns","repo","url","repoA","repoB","nameA","replace","nameB","localeCompare","reformatIsoAsLocaleDate","created_at","parseIsoDateToMillis","summary","concat","repositories","length","toLocaleString","open_issues_count","open_issues_url","total_open_issues_count","total_open_issues_url","open_pull_requests_count","open_pull_requests_url","total_open_pull_requests_count","total_open_pull_requests_url","latest_release_version","latest_release_url","latestReleaseVersionA","latestReleaseVersionB","Semver","e","latest_release_at","commits_since_release","commits_since_release_url","total_commits_since_release","stargazers_count","stargazers_url","total_stargazers_count","downloads_count","downloads_url","total_downloads_count","props","_jsx","IconButton","onClick","onShowDownloadsChart","className","classes","chartIcon","disableRipple","children","FontAwesomeIcon","icon","columnMapping","reduce","map","column","TotalRowBase","_React$Component","_inherits","_super","_createSuper","apply","arguments","key","value","this","_jsxs","TableRow","TableCell","totalCell","filter","contents","totalLink","href","align","React","lightTheme","createMuiTheme","TotalRow","withStyles","theme","fontWeight","typography","caption","color","palette","text","secondary","backgroundColor","grey","textDecoration","type","overrides","MuiTableRow","root","background","default","MuiTableCell","head","primary","dark","darkTheme","body","MuiTableSortLabel","SummaryTableBase","_React$Component2","_super2","_this","_len","args","Array","_key","call","sortBy","columnId","currentOrderBy","state","orderBy","currentOrder","order","setState","_this2","sortedRepositories","_toConsumableArray","sort","reverse","Paper","ThemeProvider","Table","TableHead","colSpan","title","subtitle","reformatIsoAsLocaleDatetime","data_at","sortDirection","tooltipPlacement","sortActive","Tooltip","placement","enterDelay","TableSortLabel","active","direction","TableFooter","TableBody","repository","link","bodyLink","SummaryTable","overflow","fontSize","h6","fontFamily","lineHeight","body2","padding","paddingLeft","borderRadius"],"sourceRoot":""}