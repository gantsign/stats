{"version":3,"sources":["stats/ui/SummaryTable.tsx"],"names":["Column","id","name","numeric","accessor","linkAccessor","comparator","totalAccessor","totalLinkAccessor","iconAccessor","Object","_home_travis_build_gantsign_stats_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","this","columns","repo","url","repoA","repoB","nameA","replace","nameB","localeCompare","reformatIsoAsLocaleDate","created_at","parseIsoDateToMillis","summary","concat","repositories","length","toLocaleString","open_issues_count","open_issues_url","total_open_issues_count","total_open_issues_url","open_pull_requests_count","open_pull_requests_url","total_open_pull_requests_count","total_open_pull_requests_url","latest_release_version","latest_release_url","latestReleaseVersionA","latestReleaseVersionB","Semver","compare","latest_release_at","commits_since_release","commits_since_release_url","total_commits_since_release","stargazers_count","stargazers_url","total_stargazers_count","downloads_count","downloads_url","total_downloads_count","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","onClick","onShowDownloadsChart","className","classes","chartIcon","disableRipple","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_11__","icon","columnMapping","reduce","map","column","TotalRowBase","totals","key","filter","contents","totalLink","href","align","React","Component","TotalRow","withStyles","theme","backgroundColor","palette","grey","fontWeight","typography","caption","color","textDecoration","&:focus, &:visited, &:link, &:active","&:hover","SummaryTableBase","sortBy","columnId","currentOrderBy","_this","state","orderBy","currentOrder","order","setState","_this2","sortedRepositories","_home_travis_build_gantsign_stats_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","sort","reverse","root","padding","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","darkTheme","header","colSpan","title","subtitle","reformatIsoAsLocaleDatetime","data_at","sortDirection","tooltipPlacement","sortActive","placement","enterDelay","active","direction","repository","row","link","bodyLink","SummaryTable","overflowX","&:nth-of-type(odd)","background","default","primary","dark","fontSize","fontFamily","lineHeight","common","white","body1","paddingLeft","borderRadius"],"mappings":"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","file":"static/js/7.1a353286.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  IconButton,\n  MuiThemeProvider,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Theme,\n  Tooltip,\n  withStyles,\n} from '@material-ui/core';\nimport { SortDirection } from '@material-ui/core/TableCell';\nimport { SummaryRepository } from '../model/SummaryRepository';\nimport {\n  darkTheme,\n  parseIsoDateToMillis,\n  reformatIsoAsLocaleDate,\n  reformatIsoAsLocaleDatetime,\n  toLocaleString,\n} from './App';\nimport { StyleRules } from '@material-ui/core/styles';\nimport { Summary } from '../model/Summary';\nimport Semver from 'semver';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Column {\n  constructor(\n    readonly id: string,\n    readonly name: string,\n    readonly numeric: boolean,\n    readonly accessor: (repo: SummaryRepository) => string,\n    readonly linkAccessor: (repo: SummaryRepository) => string | null,\n    readonly comparator: (\n      repoA: SummaryRepository,\n      repoB: SummaryRepository\n    ) => number,\n    readonly totalAccessor: (summary: Summary) => string,\n    readonly totalLinkAccessor: (summary: Summary) => string | null,\n    readonly iconAccessor: (\n      repo: SummaryRepository,\n      props: SummaryTableProps\n    ) => JSX.Element | null\n  ) {}\n}\n\nconst columns: Column[] = [\n  new Column(\n    'name',\n    'Name',\n    false,\n    repo => repo.name,\n    repo => repo.url,\n    (repoA, repoB) => {\n      const nameA = repoA.name.replace('_', '-');\n      const nameB = repoB.name.replace('_', '-');\n      return nameA.localeCompare(nameB);\n    },\n    () => '',\n    () => null,\n    () => null\n  ),\n  new Column(\n    'createdAt',\n    'Created',\n    false,\n    repo => reformatIsoAsLocaleDate(repo.created_at),\n    () => null,\n    (repoA, repoB) => {\n      const createdAtA = parseIsoDateToMillis(repoA.created_at) || 0;\n      const createdAtB = parseIsoDateToMillis(repoB.created_at) || 0;\n      return createdAtA - createdAtB;\n    },\n    summary => `${summary.repositories.length} projects`,\n    summary => summary.url,\n    () => null\n  ),\n  new Column(\n    'openIssuesCount',\n    'Open issues',\n    true,\n    repo => toLocaleString(repo.open_issues_count),\n    repo => repo.open_issues_url,\n    (repoA, repoB) => {\n      const openIssuesCountA = repoA.open_issues_count || 0;\n      const openIssuesCountB = repoB.open_issues_count || 0;\n      return openIssuesCountA - openIssuesCountB;\n    },\n    summary => toLocaleString(summary.total_open_issues_count),\n    summary => summary.total_open_issues_url,\n    () => null\n  ),\n  new Column(\n    'openPullRequestsCount',\n    'Open PRs',\n    true,\n    repo => toLocaleString(repo.open_pull_requests_count),\n    repo => repo.open_pull_requests_url,\n    (repoA, repoB) => {\n      const openPullRequestsCountA = repoA.open_pull_requests_count || 0;\n      const openPullRequestsCountB = repoB.open_pull_requests_count || 0;\n      return openPullRequestsCountA - openPullRequestsCountB;\n    },\n    summary => toLocaleString(summary.total_open_pull_requests_count),\n    summary => summary.total_open_pull_requests_url,\n    () => null\n  ),\n  new Column(\n    'latestReleaseVersion',\n    'Release',\n    false,\n    repo => repo.latest_release_version || '',\n    repo => repo.latest_release_url || null,\n    (repoA, repoB) => {\n      let latestReleaseVersionA: string | undefined | null =\n        repoA.latest_release_version;\n      if (!latestReleaseVersionA) {\n        latestReleaseVersionA = null;\n      }\n      let latestReleaseVersionB: string | undefined | null =\n        repoB.latest_release_version;\n      if (!latestReleaseVersionB) {\n        latestReleaseVersionB = null;\n      }\n      if (latestReleaseVersionA == null && latestReleaseVersionB == null) {\n        return 0;\n      }\n      if (latestReleaseVersionA == null || latestReleaseVersionB == null) {\n        return latestReleaseVersionA == null ? -1 : 1;\n      }\n      return Semver.compare(latestReleaseVersionA, latestReleaseVersionB);\n    },\n    () => '',\n    () => null,\n    () => null\n  ),\n  new Column(\n    'latestReleaseAt',\n    'Release date',\n    false,\n    repo => reformatIsoAsLocaleDate(repo.latest_release_at),\n    () => null,\n    (repoA, repoB) => {\n      const latestReleaseAtA =\n        parseIsoDateToMillis(repoA.latest_release_at) || 0;\n      const latestReleaseAtB =\n        parseIsoDateToMillis(repoB.latest_release_at) || 0;\n      return latestReleaseAtA - latestReleaseAtB;\n    },\n    () => '',\n    () => null,\n    () => null\n  ),\n  new Column(\n    'commitsSinceRelease',\n    'Commits since release',\n    true,\n    repo => toLocaleString(repo.commits_since_release),\n    repo => repo.commits_since_release_url || null,\n    (repoA, repoB) => {\n      const commitsSinceReleaseA = repoA.commits_since_release || 0;\n      const commitsSinceReleaseB = repoB.commits_since_release || 0;\n      return commitsSinceReleaseA - commitsSinceReleaseB;\n    },\n    summary => toLocaleString(summary.total_commits_since_release),\n    () => null,\n    () => null\n  ),\n  new Column(\n    'stargazersCount',\n    'Stars',\n    true,\n    repo => toLocaleString(repo.stargazers_count),\n    repo => repo.stargazers_url || null,\n    (repoA, repoB) => {\n      const stargazersCountA = repoA.stargazers_count || 0;\n      const stargazersCountB = repoB.stargazers_count || 0;\n      return stargazersCountA - stargazersCountB;\n    },\n    summary => toLocaleString(summary.total_stargazers_count),\n    () => null,\n    () => null\n  ),\n  new Column(\n    'downloadsCount',\n    'Downloads',\n    true,\n    repo => toLocaleString(repo.downloads_count),\n    repo => repo.downloads_url || null,\n    (repoA, repoB) => {\n      const downloadsCountA = repoA.downloads_count || 0;\n      const downloadsCountB = repoB.downloads_count || 0;\n      return downloadsCountA - downloadsCountB;\n    },\n    summary => toLocaleString(summary.total_downloads_count),\n    () => null,\n    (repo, props) =>\n      repo.downloads_count ? (\n        <IconButton\n          onClick={() => props.onShowDownloadsChart(repo.name)}\n          className={props.classes.chartIcon}\n          disableRipple={true}\n        >\n          <FontAwesomeIcon icon=\"chart-line\" />\n        </IconButton>\n      ) : null\n  ),\n];\n\ninterface ColumnMap {\n  [key: string]: Column;\n}\n\nconst columnMapping: ColumnMap = columns.reduce(\n  (map: ColumnMap, column: Column): ColumnMap => {\n    map[column.id] = column;\n    return map;\n  },\n  {}\n);\n\ninterface TotalRowProps {\n  classes: any;\n  summary?: Summary;\n}\n\nclass TotalRowBase extends React.Component<TotalRowProps, {}> {\n  render() {\n    const summary = this.props.summary;\n    if (!summary) {\n      return;\n    }\n    const classes = this.props.classes;\n\n    return (\n      <TableRow className={classes.totals}>\n        <TableCell key=\"totals\">Totals</TableCell>\n        {columns\n          .filter((column: Column) => column.id !== 'name')\n          .map((column: Column) => {\n            const url = column.totalLinkAccessor(summary);\n            const contents = url ? (\n              <a className={classes.totalLink} href={url}>\n                {column.totalAccessor(summary)}\n              </a>\n            ) : (\n              column.totalAccessor(summary)\n            );\n            return (\n              <TableCell\n                key={column.id}\n                align={column.numeric ? 'right' : 'left'}\n              >\n                {contents}\n              </TableCell>\n            );\n          })}\n      </TableRow>\n    );\n  }\n}\n\nconst totalRowStyles = (theme: Theme): StyleRules => ({\n  totals: {\n    backgroundColor: theme.palette.grey['300'],\n  },\n  totalLink: {\n    fontWeight: theme.typography.caption.fontWeight,\n    color: theme.typography.caption.color,\n    textDecoration: 'none',\n    '&:focus, &:visited, &:link, &:active': {\n      color: theme.typography.caption.color,\n      textDecoration: 'none',\n    },\n    '&:hover': {\n      color: theme.typography.caption.color,\n      textDecoration: 'underline',\n    },\n  },\n});\n\nconst TotalRow = withStyles(totalRowStyles)(TotalRowBase);\n\ninterface SummaryTableProps {\n  summary: Summary;\n\n  classes: any;\n\n  onShowDownloadsChart: (repositoryName: string) => void;\n}\n\ninterface SummaryTableState {\n  orderBy?: string;\n\n  order?: SortDirection;\n}\n\nclass SummaryTableBase extends React.Component<\n  SummaryTableProps,\n  SummaryTableState\n> {\n  componentDidMount(): void {\n    this.setState({\n      orderBy: 'name',\n      order: 'asc',\n    });\n  }\n\n  sortBy = (columnId: string) => {\n    const currentOrderBy: string = this.state.orderBy || 'name';\n    const currentOrder: SortDirection = this.state.order || 'asc';\n\n    const order: SortDirection =\n      currentOrderBy === columnId\n        ? currentOrder === 'desc'\n          ? 'asc'\n          : 'desc'\n        : columnId === 'name'\n        ? 'asc'\n        : 'desc';\n\n    this.setState({\n      orderBy: columnId,\n      order,\n    });\n  };\n\n  render() {\n    const state = this.state;\n    if (!state) {\n      return <div>Loading...</div>;\n    }\n    const summary = this.props.summary;\n    const classes: any = this.props.classes;\n    const orderBy: string = state.orderBy || 'name';\n    const order: SortDirection = state.order || 'asc';\n    const repositories: SummaryRepository[] = summary.repositories;\n    const comparator = (columnMapping[orderBy] || columns[0]).comparator;\n\n    const sortedRepositories = [...repositories];\n    sortedRepositories.sort(comparator);\n    if (order === 'desc') {\n      sortedRepositories.reverse();\n    }\n\n    return (\n      <Paper className={classes.root}>\n        <Table padding=\"dense\">\n          <TableHead>\n            <MuiThemeProvider theme={darkTheme}>\n              <TableRow className={classes.header}>\n                <TableCell colSpan={columns.length}>\n                  <h2 className={classes.title}>\n                    GantSign open-source project statistics\n                  </h2>\n                  <div className={classes.subtitle}>\n                    Last updated: {reformatIsoAsLocaleDatetime(summary.data_at)}\n                  </div>\n                </TableCell>\n              </TableRow>\n              <TableRow className={classes.header}>\n                {columns.map((column: Column) => {\n                  const sortDirection: SortDirection =\n                    orderBy === column.id ? order : false;\n                  const tooltipPlacement = column.numeric\n                    ? 'bottom-end'\n                    : 'bottom-start';\n                  const sortActive = orderBy === column.id;\n\n                  return (\n                    <TableCell\n                      key={column.id}\n                      align={column.numeric ? 'right' : 'left'}\n                      sortDirection={sortDirection}\n                    >\n                      <Tooltip\n                        title=\"Sort\"\n                        placement={tooltipPlacement}\n                        enterDelay={300}\n                      >\n                        <TableSortLabel\n                          active={sortActive}\n                          direction={order}\n                          onClick={() => this.sortBy(column.id)}\n                        >\n                          {column.name}\n                        </TableSortLabel>\n                      </Tooltip>\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            </MuiThemeProvider>\n            <TotalRow summary={summary} />\n          </TableHead>\n          <TableFooter>\n            <TotalRow summary={summary} />\n          </TableFooter>\n          <TableBody>\n            {sortedRepositories.map((repository: SummaryRepository) => (\n              <TableRow key={repository.name} className={classes.row}>\n                {columns.map((column: Column) => {\n                  const link = column.linkAccessor(repository);\n                  const contents = link ? (\n                    <a className={classes.bodyLink} href={link}>\n                      {column.accessor(repository)}\n                    </a>\n                  ) : (\n                    column.accessor(repository)\n                  );\n                  return (\n                    <TableCell\n                      key={column.id}\n                      align={column.numeric ? 'right' : 'left'}\n                    >\n                      {contents}\n                      {column.iconAccessor(repository, this.props) || ''}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n\nconst styles = (theme: Theme): StyleRules => ({\n  root: {\n    overflowX: 'auto',\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n  header: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  title: {\n    fontSize: theme.typography.title.fontSize,\n    fontWeight: theme.typography.title.fontWeight,\n    fontFamily: theme.typography.title.fontFamily,\n    lineHeight: theme.typography.title.lineHeight,\n    color: theme.palette.common.white,\n  },\n  subtitle: {\n    fontSize: theme.typography.caption.fontSize,\n    fontWeight: theme.typography.caption.fontWeight,\n    fontFamily: theme.typography.caption.fontFamily,\n    lineHeight: theme.typography.caption.lineHeight,\n    color: theme.palette.common.white,\n  },\n  bodyLink: {\n    fontWeight: theme.typography.body1.fontWeight,\n    color: theme.typography.body1.color,\n    textDecoration: 'none',\n    '&:focus, &:visited, &:link, &:active': {\n      color: theme.typography.body1.color,\n      textDecoration: 'none',\n    },\n    '&:hover': {\n      color: theme.typography.body1.color,\n      textDecoration: 'underline',\n    },\n  },\n  chartIcon: {\n    padding: 0,\n    paddingLeft: '0.25em',\n    borderRadius: 0,\n  },\n});\nconst SummaryTable = withStyles(styles)(SummaryTableBase);\n\nexport default SummaryTable;\n"],"sourceRoot":""}