{"version":3,"sources":["stats/ui/SummaryTable.tsx"],"names":["Column","id","name","numeric","accessor","linkAccessor","comparator","totalAccessor","totalLinkAccessor","iconAccessor","columns","repo","url","repoA","repoB","nameA","replace","nameB","localeCompare","reformatIsoAsLocaleDate","created_at","parseIsoDateToMillis","summary","repositories","length","toLocaleString","open_issues_count","open_issues_url","total_open_issues_count","total_open_issues_url","open_pull_requests_count","open_pull_requests_url","total_open_pull_requests_count","total_open_pull_requests_url","latest_release_version","latest_release_url","latestReleaseVersionA","latestReleaseVersionB","Semver","compare","latest_release_at","commits_since_release","commits_since_release_url","total_commits_since_release","stargazers_count","stargazers_url","total_stargazers_count","downloads_count","downloads_url","total_downloads_count","props","onClick","onShowDownloadsChart","className","classes","chartIcon","disableRipple","icon","columnMapping","reduce","map","column","TotalRowBase","this","totals","key","filter","contents","totalLink","href","align","React","Component","TotalRow","withStyles","theme","backgroundColor","palette","grey","fontWeight","typography","caption","color","textDecoration","SummaryTableBase","sortBy","columnId","currentOrderBy","state","orderBy","currentOrder","order","setState","sortedRepositories","sort","reverse","root","padding","darkTheme","header","colSpan","title","subtitle","reformatIsoAsLocaleDatetime","data_at","sortDirection","tooltipPlacement","sortActive","placement","enterDelay","active","direction","repository","row","link","bodyLink","SummaryTable","overflowX","background","default","primary","dark","fontSize","fontFamily","lineHeight","common","white","body1","paddingLeft","borderRadius"],"mappings":"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","file":"static/js/7.9493945e.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  IconButton,\n  MuiThemeProvider,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Theme,\n  Tooltip,\n  withStyles,\n} from '@material-ui/core';\nimport { SortDirection } from '@material-ui/core/TableCell';\nimport { SummaryRepository } from '../model/SummaryRepository';\nimport {\n  darkTheme,\n  parseIsoDateToMillis,\n  reformatIsoAsLocaleDate,\n  reformatIsoAsLocaleDatetime,\n  toLocaleString,\n} from './App';\nimport { StyleRules } from '@material-ui/core/styles';\nimport { Summary } from '../model/Summary';\nimport Semver from 'semver';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Column {\n  constructor(\n    readonly id: string,\n    readonly name: string,\n    readonly numeric: boolean,\n    readonly accessor: (repo: SummaryRepository) => string,\n    readonly linkAccessor: (repo: SummaryRepository) => string | null,\n    readonly comparator: (\n      repoA: SummaryRepository,\n      repoB: SummaryRepository\n    ) => number,\n    readonly totalAccessor: (summary: Summary) => string,\n    readonly totalLinkAccessor: (summary: Summary) => string | null,\n    readonly iconAccessor: (\n      repo: SummaryRepository,\n      props: SummaryTableProps\n    ) => JSX.Element | null\n  ) {}\n}\n\nconst columns: Column[] = [\n  new Column(\n    'name',\n    'Name',\n    false,\n    repo => repo.name,\n    repo => repo.url,\n    (repoA, repoB) => {\n      const nameA = repoA.name.replace('_', '-');\n      const nameB = repoB.name.replace('_', '-');\n      return nameA.localeCompare(nameB);\n    },\n    () => '',\n    () => null,\n    () => null\n  ),\n  new Column(\n    'createdAt',\n    'Created',\n    false,\n    repo => reformatIsoAsLocaleDate(repo.created_at),\n    () => null,\n    (repoA, repoB) => {\n      const createdAtA = parseIsoDateToMillis(repoA.created_at) || 0;\n      const createdAtB = parseIsoDateToMillis(repoB.created_at) || 0;\n      return createdAtA - createdAtB;\n    },\n    summary => `${summary.repositories.length} projects`,\n    summary => summary.url,\n    () => null\n  ),\n  new Column(\n    'openIssuesCount',\n    'Open issues',\n    true,\n    repo => toLocaleString(repo.open_issues_count),\n    repo => repo.open_issues_url,\n    (repoA, repoB) => {\n      const openIssuesCountA = repoA.open_issues_count || 0;\n      const openIssuesCountB = repoB.open_issues_count || 0;\n      return openIssuesCountA - openIssuesCountB;\n    },\n    summary => toLocaleString(summary.total_open_issues_count),\n    summary => summary.total_open_issues_url,\n    () => null\n  ),\n  new Column(\n    'openPullRequestsCount',\n    'Open PRs',\n    true,\n    repo => toLocaleString(repo.open_pull_requests_count),\n    repo => repo.open_pull_requests_url,\n    (repoA, repoB) => {\n      const openPullRequestsCountA = repoA.open_pull_requests_count || 0;\n      const openPullRequestsCountB = repoB.open_pull_requests_count || 0;\n      return openPullRequestsCountA - openPullRequestsCountB;\n    },\n    summary => toLocaleString(summary.total_open_pull_requests_count),\n    summary => summary.total_open_pull_requests_url,\n    () => null\n  ),\n  new Column(\n    'latestReleaseVersion',\n    'Release',\n    false,\n    repo => repo.latest_release_version || '',\n    repo => repo.latest_release_url || null,\n    (repoA, repoB) => {\n      let latestReleaseVersionA: string | undefined | null =\n        repoA.latest_release_version;\n      if (!latestReleaseVersionA) {\n        latestReleaseVersionA = null;\n      }\n      let latestReleaseVersionB: string | undefined | null =\n        repoB.latest_release_version;\n      if (!latestReleaseVersionB) {\n        latestReleaseVersionB = null;\n      }\n      if (latestReleaseVersionA == null && latestReleaseVersionB == null) {\n        return 0;\n      }\n      if (latestReleaseVersionA == null || latestReleaseVersionB == null) {\n        return latestReleaseVersionA == null ? -1 : 1;\n      }\n      return Semver.compare(latestReleaseVersionA, latestReleaseVersionB);\n    },\n    () => '',\n    () => null,\n    () => null\n  ),\n  new Column(\n    'latestReleaseAt',\n    'Release date',\n    false,\n    repo => reformatIsoAsLocaleDate(repo.latest_release_at),\n    () => null,\n    (repoA, repoB) => {\n      const latestReleaseAtA =\n        parseIsoDateToMillis(repoA.latest_release_at) || 0;\n      const latestReleaseAtB =\n        parseIsoDateToMillis(repoB.latest_release_at) || 0;\n      return latestReleaseAtA - latestReleaseAtB;\n    },\n    () => '',\n    () => null,\n    () => null\n  ),\n  new Column(\n    'commitsSinceRelease',\n    'Commits since release',\n    true,\n    repo => toLocaleString(repo.commits_since_release),\n    repo => repo.commits_since_release_url || null,\n    (repoA, repoB) => {\n      const commitsSinceReleaseA = repoA.commits_since_release || 0;\n      const commitsSinceReleaseB = repoB.commits_since_release || 0;\n      return commitsSinceReleaseA - commitsSinceReleaseB;\n    },\n    summary => toLocaleString(summary.total_commits_since_release),\n    () => null,\n    () => null\n  ),\n  new Column(\n    'stargazersCount',\n    'Stars',\n    true,\n    repo => toLocaleString(repo.stargazers_count),\n    repo => repo.stargazers_url || null,\n    (repoA, repoB) => {\n      const stargazersCountA = repoA.stargazers_count || 0;\n      const stargazersCountB = repoB.stargazers_count || 0;\n      return stargazersCountA - stargazersCountB;\n    },\n    summary => toLocaleString(summary.total_stargazers_count),\n    () => null,\n    () => null\n  ),\n  new Column(\n    'downloadsCount',\n    'Downloads',\n    true,\n    repo => toLocaleString(repo.downloads_count),\n    repo => repo.downloads_url || null,\n    (repoA, repoB) => {\n      const downloadsCountA = repoA.downloads_count || 0;\n      const downloadsCountB = repoB.downloads_count || 0;\n      return downloadsCountA - downloadsCountB;\n    },\n    summary => toLocaleString(summary.total_downloads_count),\n    () => null,\n    (repo, props) =>\n      repo.downloads_count ? (\n        <IconButton\n          onClick={() => props.onShowDownloadsChart(repo.name)}\n          className={props.classes.chartIcon}\n          disableRipple={true}\n        >\n          <FontAwesomeIcon icon=\"chart-line\" />\n        </IconButton>\n      ) : null\n  ),\n];\n\ninterface ColumnMap {\n  [key: string]: Column;\n}\n\nconst columnMapping: ColumnMap = columns.reduce(\n  (map: ColumnMap, column: Column): ColumnMap => {\n    map[column.id] = column;\n    return map;\n  },\n  {}\n);\n\ninterface TotalRowProps {\n  classes: any;\n  summary?: Summary;\n}\n\nclass TotalRowBase extends React.Component<TotalRowProps, {}> {\n  render() {\n    const summary = this.props.summary;\n    if (!summary) {\n      return;\n    }\n    const classes = this.props.classes;\n\n    return (\n      <TableRow className={classes.totals}>\n        <TableCell key=\"totals\">Totals</TableCell>\n        {columns\n          .filter((column: Column) => column.id !== 'name')\n          .map((column: Column) => {\n            const url = column.totalLinkAccessor(summary);\n            const contents = url ? (\n              <a className={classes.totalLink} href={url}>\n                {column.totalAccessor(summary)}\n              </a>\n            ) : (\n              column.totalAccessor(summary)\n            );\n            return (\n              <TableCell\n                key={column.id}\n                align={column.numeric ? 'right' : 'left'}\n              >\n                {contents}\n              </TableCell>\n            );\n          })}\n      </TableRow>\n    );\n  }\n}\n\nconst totalRowStyles = (theme: Theme): StyleRules => ({\n  totals: {\n    backgroundColor: theme.palette.grey['300'],\n  },\n  totalLink: {\n    fontWeight: theme.typography.caption.fontWeight,\n    color: theme.typography.caption.color,\n    textDecoration: 'none',\n    '&:focus, &:visited, &:link, &:active': {\n      color: theme.typography.caption.color,\n      textDecoration: 'none',\n    },\n    '&:hover': {\n      color: theme.typography.caption.color,\n      textDecoration: 'underline',\n    },\n  },\n});\n\nconst TotalRow = withStyles(totalRowStyles)(TotalRowBase);\n\ninterface SummaryTableProps {\n  summary: Summary;\n\n  classes: any;\n\n  onShowDownloadsChart: (repositoryName: string) => void;\n}\n\ninterface SummaryTableState {\n  orderBy?: string;\n\n  order?: SortDirection;\n}\n\nclass SummaryTableBase extends React.Component<\n  SummaryTableProps,\n  SummaryTableState\n> {\n  componentDidMount(): void {\n    this.setState({\n      orderBy: 'name',\n      order: 'asc',\n    });\n  }\n\n  sortBy = (columnId: string) => {\n    const currentOrderBy: string = this.state.orderBy || 'name';\n    const currentOrder: SortDirection = this.state.order || 'asc';\n\n    const order: SortDirection =\n      currentOrderBy === columnId\n        ? currentOrder === 'desc'\n          ? 'asc'\n          : 'desc'\n        : columnId === 'name'\n        ? 'asc'\n        : 'desc';\n\n    this.setState({\n      orderBy: columnId,\n      order,\n    });\n  };\n\n  render() {\n    const state = this.state;\n    if (!state) {\n      return <div>Loading...</div>;\n    }\n    const summary = this.props.summary;\n    const classes: any = this.props.classes;\n    const orderBy: string = state.orderBy || 'name';\n    const order: SortDirection = state.order || 'asc';\n    const repositories: SummaryRepository[] = summary.repositories;\n    const comparator = (columnMapping[orderBy] || columns[0]).comparator;\n\n    const sortedRepositories = [...repositories];\n    sortedRepositories.sort(comparator);\n    if (order === 'desc') {\n      sortedRepositories.reverse();\n    }\n\n    return (\n      <Paper className={classes.root}>\n        <Table padding=\"dense\">\n          <TableHead>\n            <MuiThemeProvider theme={darkTheme}>\n              <TableRow className={classes.header}>\n                <TableCell colSpan={columns.length}>\n                  <h2 className={classes.title}>\n                    GantSign open-source project statistics\n                  </h2>\n                  <div className={classes.subtitle}>\n                    Last updated: {reformatIsoAsLocaleDatetime(summary.data_at)}\n                  </div>\n                </TableCell>\n              </TableRow>\n              <TableRow className={classes.header}>\n                {columns.map((column: Column) => {\n                  const sortDirection: SortDirection =\n                    orderBy === column.id ? order : false;\n                  const tooltipPlacement = column.numeric\n                    ? 'bottom-end'\n                    : 'bottom-start';\n                  const sortActive = orderBy === column.id;\n\n                  return (\n                    <TableCell\n                      key={column.id}\n                      align={column.numeric ? 'right' : 'left'}\n                      sortDirection={sortDirection}\n                    >\n                      <Tooltip\n                        title=\"Sort\"\n                        placement={tooltipPlacement}\n                        enterDelay={300}\n                      >\n                        <TableSortLabel\n                          active={sortActive}\n                          direction={order}\n                          onClick={() => this.sortBy(column.id)}\n                        >\n                          {column.name}\n                        </TableSortLabel>\n                      </Tooltip>\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            </MuiThemeProvider>\n            <TotalRow summary={summary} />\n          </TableHead>\n          <TableFooter>\n            <TotalRow summary={summary} />\n          </TableFooter>\n          <TableBody>\n            {sortedRepositories.map((repository: SummaryRepository) => (\n              <TableRow key={repository.name} className={classes.row}>\n                {columns.map((column: Column) => {\n                  const link = column.linkAccessor(repository);\n                  const contents = link ? (\n                    <a className={classes.bodyLink} href={link}>\n                      {column.accessor(repository)}\n                    </a>\n                  ) : (\n                    column.accessor(repository)\n                  );\n                  return (\n                    <TableCell\n                      key={column.id}\n                      align={column.numeric ? 'right' : 'left'}\n                    >\n                      {contents}\n                      {column.iconAccessor(repository, this.props) || ''}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n\nconst styles = (theme: Theme): StyleRules => ({\n  root: {\n    overflowX: 'auto',\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n  header: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  title: {\n    fontSize: theme.typography.title.fontSize,\n    fontWeight: theme.typography.title.fontWeight,\n    fontFamily: theme.typography.title.fontFamily,\n    lineHeight: theme.typography.title.lineHeight,\n    color: theme.palette.common.white,\n  },\n  subtitle: {\n    fontSize: theme.typography.caption.fontSize,\n    fontWeight: theme.typography.caption.fontWeight,\n    fontFamily: theme.typography.caption.fontFamily,\n    lineHeight: theme.typography.caption.lineHeight,\n    color: theme.palette.common.white,\n  },\n  bodyLink: {\n    fontWeight: theme.typography.body1.fontWeight,\n    color: theme.typography.body1.color,\n    textDecoration: 'none',\n    '&:focus, &:visited, &:link, &:active': {\n      color: theme.typography.body1.color,\n      textDecoration: 'none',\n    },\n    '&:hover': {\n      color: theme.typography.body1.color,\n      textDecoration: 'underline',\n    },\n  },\n  chartIcon: {\n    padding: 0,\n    paddingLeft: '0.25em',\n    borderRadius: 0,\n  },\n});\nconst SummaryTable = withStyles(styles)(SummaryTableBase);\n\nexport default SummaryTable;\n"],"sourceRoot":""}